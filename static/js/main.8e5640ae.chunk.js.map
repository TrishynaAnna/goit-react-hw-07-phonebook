{"version":3,"sources":["components/contacts/findContact/FindContact.module.css","components/Phonebook.module.css","components/contacts/contactsList/contactsListItem/ContactsListItem.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsAction.js","redux/contacts/contactsOperations.js","components/contacts/contactsList/ContactsList.js","redux/status/statusSelectors.js","redux/status/statusActions.js","components/contacts/contactForm/Ð¡ontactForm.js","components/contacts/findContact/FindContact.js","components/Phonebook.js","App.js","redux/contacts/contactsReducer.js","redux/status/statusReducer.js","redux/store.js","index.js","components/contacts/contactForm/ContactForm.module.css","components/contacts/contactsList/contactsListItem/ContactListItem.module.css"],"names":["module","exports","ContactListItem","contact","removeItem","data-id","id","className","style","contactListItem","contactListItemHeadline","name","number","type","onClick","button","getContactsItems","state","contacts","items","getContactsFilter","filter","addContactsRequest","createAction","addContactsSuccess","addContactsError","getContactsRequest","getContactsSuccess","getContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","getFilterValue","e","payload","target","value","axios","defaults","baseURL","mapDispatchToProps","dispatch","delete","then","catch","error","connect","length","toLowerCase","includes","filteredContact","map","getStatusIson","status","inOn","getStatusExist","exist","statusInOn","statusExist","ContactForm","handleInputValue","el","inputValue","dataset","setState","handleSubmit","props","addNewContact","preventDefault","replace","l","toUpperCase","find","element","setTimeout","this","onSubmit","label","htmlFor","input","data-type","placeholder","onChange","pattern","variant","Component","post","data","Phonebook","getItem","container","get","App","contactsReducer","createReducer","action","item","statusReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e5640ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FindContact_filter__2QJnz\",\"input\":\"FindContact_input__36gmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__19OaE\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contact, removeItem }) => {\r\n    return (\r\n        <li data-id={contact.id} className={style.contactListItem}>\r\n            <h4 className={style.contactListItemHeadline}>{contact.name}</h4>\r\n            <h4 className={style.contactListItemHeadline}>{contact.number}</h4>\r\n            <button type=\"button\" id={contact.id} onClick={() => removeItem(contact.id)} className={style.button}>\r\n                delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n    contact: PropTypes.object,\r\n};\r\n","const getContactsItems = (state) => state.contacts.items;\r\nconst getContactsFilter = (state) => state.contacts.filter;\r\n\r\nexport { getContactsItems, getContactsFilter };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactsRequest = createAction(\"contacts/addRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactsError = createAction(\"contacts/addError\");\r\n\r\nconst getContactsRequest = createAction(\"contacts/getRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\r\nconst getContactsError = createAction(\"contacts/getError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst getFilterValue = createAction(\"FILTER_CONTACT\", function prepare(e) {\r\n    const string = e.target.value;\r\n    return {\r\n        payload: string,\r\n    };\r\n});\r\n\r\nexport { addContactsRequest, addContactsSuccess, addContactsError, getContactsRequest, getContactsSuccess, getContactsError, removeContactsRequest, removeContactsSuccess, removeContactsError, getFilterValue };\r\n","import {addContactsRequest, addContactsSuccess, addContactsError, getContactsRequest, getContactsSuccess, getContactsError, removeContactsRequest, removeContactsSuccess, removeContactsError} from \"./contactsAction\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nconst addNewContact = (contact) => (dispatch) => {\r\n    dispatch(addContactsRequest());\r\n    axios\r\n        .post(\"/contacts\", { ...contact })\r\n        .then(({ data }) => {\r\n            dispatch(addContactsSuccess({ ...data }));\r\n        })\r\n        .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst getItem = () => (dispatch) => {\r\n    dispatch(getContactsRequest());\r\n    axios\r\n        .get(\"/contacts\")\r\n        .then(({ data }) => {\r\n            dispatch(getContactsSuccess([...data]));\r\n        })\r\n        .catch((error) => dispatch(getContactsError(error)));\r\n};\r\n\r\nconst removeItem = (id) => (dispatch) => {\r\n    dispatch(removeContactsRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => {\r\n            dispatch(removeContactsSuccess(id));\r\n        })\r\n        .catch((error) => dispatch(removeContactsError(error)));\r\n};\r\n\r\nexport { addNewContact, getItem, removeItem };\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactsListItem/ContactsListItem\";\r\nimport {getContactsFilter, getContactsItems} from \"../../../redux/contacts/contactsSelectors\";\r\nimport {removeItem} from \"../../../redux/contacts/contactsOperations\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction filteredContact(items, filter) {\r\n    if (filter.length !== 0) {\r\n        return items.filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n    } else {\r\n        return items;\r\n    }\r\n}\r\n\r\nconst ContactList = ({ items, filter = \"\", removeItem }) => {\r\n    const contacts = filteredContact(items, filter);\r\n    return (\r\n        <ul >\r\n            {contacts.map((contact) => (\r\n                    <ContactListItem\r\n                        removeItem={removeItem}\r\n                        contact={contact}\r\n                        key={contact.id}\r\n                    />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: getContactsItems(state),\r\n        filter: getContactsFilter(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeItem,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","const getStatusIson = (state) => state.status.inOn;\r\nconst getStatusExist = (state) => state.status.exist;\r\n\r\nexport { getStatusIson, getStatusExist };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst statusInOn = createAction(\"CHANGE_STATUS_ISON\");\r\nconst statusExist = createAction(\"CHANGE_STATUS_EXIST\");\r\n\r\nexport { statusInOn, statusExist };\r\n","import React, {Component} from \"react\";\r\nimport style from \"../contactForm/ContactForm.module.css\";\r\nimport {getContactsItems} from \"../../../redux/contacts/contactsSelectors\";\r\nimport {getStatusExist} from \"../../../redux/status/statusSelectors\";\r\nimport {statusExist} from \"../../../redux/status/statusActions\";\r\nimport {addNewContact} from \"../../../redux/contacts/contactsOperations\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    handleInputValue = (el) => {\r\n        const inputValue = el.target.dataset.type;\r\n        this.setState({\r\n            [inputValue]: el.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (el) => {\r\n        const { statusExist, addNewContact } = this.props;\r\n        el.preventDefault();\r\n        const contact = {\r\n            name: this.state.name.replace(/\\b\\w/g, (l) => l.toUpperCase()),\r\n            number: this.state.number,\r\n        };\r\n        if (\r\n            this.props.items.find(\r\n                (element) => element.name.toLowerCase() === contact.name.toLowerCase()\r\n            )\r\n        ) {\r\n            statusExist(true);\r\n            return setTimeout(() => {\r\n                statusExist(false);\r\n            }, 2000);\r\n        } else {\r\n            addNewContact(contact);\r\n        }\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\",\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { name, number} = this.state;\r\n        return (\r\n            <form  onSubmit={this.handleSubmit}>\r\n                <label className={style.label} htmlFor=\"contactName\">Name</label>\r\n                <input\r\n                    className={style.input}\r\n                    id=\"contactName\"\r\n                    type=\"text\"\r\n                    data-type=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter your name\"\r\n                    onChange={this.handleInputValue}\r\n                />\r\n                <br />\r\n                <label className={style.label} htmlFor=\"contactNumber\">Number\r\n                    (xxx-xx-xx)</label>\r\n                <input\r\n                    className={style.input}\r\n                    id=\"contactNumber\"\r\n                    type=\"text\"\r\n                    data-type=\"number\"\r\n                    value={number}\r\n                    pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n                    placeholder=\"Enter your phone number in this format\"\r\n                    onChange={this.handleInputValue}\r\n                />\r\n                <button className={style.button} variant=\"outlined\" type=\"submit\">\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: getContactsItems(state),\r\n        exist: getStatusExist(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addNewContact,\r\n    statusExist,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport style from \"./FindContact.module.css\";\r\nimport {getFilterValue} from \"../../../redux/contacts/contactsAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst FindContact = ({ getFilterValue }) => {\r\n    return (\r\n        <div className={style.filter}>\r\n            <label className={style.label} htmlFor=\"findContact\">Enter a name to search</label>\r\n            <input className={style.input} id=\"findContact\" type=\"text\" onChange={getFilterValue} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = {\r\n    getFilterValue,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContact);\r\n","import React, {Component} from \"react\";\r\nimport ContactList from \"./contacts/contactsList/ContactsList\";\r\nimport ContactForm from \"./contacts/contactForm/Ð¡ontactForm\";\r\nimport FindContact from \"./contacts/findContact/FindContact\";\r\nimport style from \"./Phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {getContactsItems} from \"../redux/contacts/contactsSelectors\";\r\nimport {getStatusIson} from \"../redux/status/statusSelectors\";\r\nimport {getItem} from \"../redux/contacts/contactsOperations\";\r\nimport {statusInOn} from \"../redux/status/statusActions\";\r\n\r\nclass Phonebook extends Component {\r\n    componentDidMount() {\r\n        this.props.getItem();\r\n    }\r\n\r\n    render() {\r\n        this.props.statusInOn(true);\r\n        return (\r\n                <div className={style.container}>\r\n                    <h1>Phonebook</h1>\r\n                    <ContactForm />\r\n                        <FindContact />\r\n                    <ContactList />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: getContactsItems(state),\r\n        inOn: getStatusIson(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    getItem,\r\n    statusInOn,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\nimport Phonebook from \"./components/Phonebook\";\n\nconst App = () => {\n  return <Phonebook />;\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\"\r\nimport { getFilterValue, addContactsSuccess, getContactsSuccess, removeContactsSuccess } from \"./contactsAction\";\r\n\r\nconst contactsReducer = createReducer(\r\n    { items: [], filter: \"\" },\r\n    {\r\n        [getContactsSuccess]: (state, action) => ({ items: action.payload }),\r\n        [addContactsSuccess]: (state, action) => ({\r\n            ...state,\r\n            items: [...state.items, action.payload],\r\n        }),\r\n        [removeContactsSuccess]: (state, action) => ({\r\n            ...state,\r\n            items: [\r\n                ...state.items.filter((item) => {\r\n                    return item.id !== action.payload;\r\n                }),\r\n            ],\r\n        }),\r\n        [getFilterValue]: (state, action) => ({ ...state, filter: action.payload }),\r\n    }\r\n);\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { statusInOn, statusExist } from \"../status/statusActions\";\r\n\r\nconst statusReducer = createReducer(\r\n    { inOn: false, exist: false },\r\n    {\r\n        [statusInOn]: (state, action) => ({\r\n            ...state,\r\n            inOn: action.payload,\r\n        }),\r\n        [statusExist]: (state, action) => ({\r\n            ...state,\r\n            exist: action.payload,\r\n        }),\r\n    }\r\n);\r\n\r\nexport default statusReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport statusReducer from \"./status/statusReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n        status: statusReducer,\r\n    },\r\n    middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__BeGQA\",\"input\":\"ContactForm_input__YOxiY\",\"button\":\"ContactForm_button__2Dubg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__1RNgi\",\"contactListItemHeadline\":\"ContactListItem_contactListItemHeadline__5RcP4\",\"button\":\"ContactListItem_button__NmidB\"};"],"sourceRoot":""}